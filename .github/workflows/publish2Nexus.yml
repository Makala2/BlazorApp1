# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: publish to Nexus

on:
  push:
    branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]

jobs:
  build-and-publish:
    runs-on: [self-hosted, Windows, X64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Pack NuGet package
      run: dotnet pack --configuration Release --no-build --output .\nupkg

    - name: copy to server
      shell: pwsh
      run: Copy-Item -Path ".\nupkg\*.nupkg" -Destination "\\WINSERV1\Temp"

    - name: Publish to Nexus
      run: dotnet nuget push ".\nupkg\*.nupkg" --source http://localhost:8081/repository/MyNuget/ --api-key 984cf249-86d5-3861-83e0-d690ca3e1a5c
      #env:
        # Use either username/password or an API key with the Nexus endpoint
        #NUGET_PUSH_API_KEY: 984cf249-86d5-3861-83e0-d690ca3e1a5c
        # Alternatively, for username and password authentication, you can use a NuGet.Config file    
    
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal
