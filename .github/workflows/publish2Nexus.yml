# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: publish to Nexus

on:
  push:
    branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]

jobs:
  build-and-publish:
    runs-on: [self-hosted, Windows, X64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore        

    - name: publish
      run: |
          New-Item -Path ".\output\" -ItemType Directory
          dotnet publish -c Release -o ".\output\"
          Compress-Archive -Path ".\output\*" -DestinationPath ".\BlazorApp1.zip"

    #- name: Pack NuGet package
    #  run: dotnet pack --configuration Release --no-build --output .\nupkg

    - name: copy to server
      shell: pwsh
      run: |
        #Import-Module bitstransfer
        $cred = New-Object System.Management.Automation.PSCredential("WinServ1\tchapda", (ConvertTo-SecureString "Aime4274" -AsPlainText -Force))
        $Session = New-PSSession -ComputerName "WinServ1" -Credential $cred       
        $sourcePath = ".\BlazorApp1.zip" #".\nupkg\"
        Write-Host $sourcePath
        $destPath = "C:\Temp\" #"D:\VirtualBox_VMs\Shared\"
        Write-Host $destPath
        Copy-Item $sourcePath -Destination $destPath -ToSession $Session
        #Start-BitsTransfer -Source $sourcePath -Destination $destPath #-Credential $cred
        #$cred = New-Object System.Management.Automation.PSCredential("WinServ1\tchapda", (ConvertTo-SecureString "Aime4274" -AsPlainText -Force))
        #Get-ChildItem -Path $sourcePath -Filter *.nupkg | ForEach-Object { 
        #  $package = $_.FullName
        #  Write-Host $package
        #  Start-BitsTransfer -Source $package -Destination $destPath #-Credential $cred
        #}

    - name: deploy to iis
      shell: pwsh
      run: |
        "Expand-Archive -Path 'C:\Temp\*.zip' -DestinationPath 'C:\Temp\BlazorApp1\'" | Add-Content -Path ".\output\deploy.ps1"
        "iisreset /stop" | Add-Content -Path D:\Temp\deploy2.ps1
        "Copy-Item 'C:\Temp\BlazorApp1\*' -Destination 'C:\BlazorApp1\' -Force" | Add-Content -Path ".\output\deploy.ps1"
        "iisreset /start" | Add-Content -Path ".\output\deploy.ps1"
        "Remove-Item -Path 'C:\Temp\*.zip' -Force" | Add-Content -Path ".\output\deploy.ps1"
        "Remove-Item -Path 'C:\Temp\BlazorApp1\' -Recurse -Force" | Add-Content -Path ".\output\deploy.ps1"
        $cred = New-Object System.Management.Automation.PSCredential("WinServ1\tchapda", (ConvertTo-SecureString "Aime4274" -AsPlainText -Force))
        Invoke-Command -ComputerName "WinServ1" -FilePath ".\output\deploy.ps1" -Credential $cred

    #- name: Publish to Nexus
    #  run: dotnet nuget push ".\nupkg\*.nupkg" --source http://localhost:8081/repository/MyNuget/ --api-key 984cf249-86d5-3861-83e0-d690ca3e1a5c

    #- name: Test
    #  run: dotnet test --no-build --verbosity normal
